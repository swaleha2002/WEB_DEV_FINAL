//Arrays

One of the most important data structures in JavaScript is the array, which is a collection of elements. In this blog post, we will explore the basics of JavaScript arrays and the various array methods that can be used to manipulate them.

An array in JavaScript is a collection of elements enclosed in square brackets.

length - This method returns the number of elements in an array.

push - This method is used to add an element to the end of an array.

pop - This method is used to remove the last element of an array.

shift - This method is used to remove the first element of an array.

unshift - This method is used to add an element to the beginning of an array.

slice - This method is used to extract a portion of an array.

splice - This method is used to add or remove elements from an array. 


//Loops with Arrays
for loop - This is the most basic way to iterate through an array. The for loop uses a counter variable that is incremented on each iteration.

var myArray = [1, 2, 3, 4, 5];
for (var i = 0; i < myArray.length; i++) {
    console.log(myArray[i]);
}


forEach method - This method is a more concise way to iterate through an array. The forEach method takes a callback function as its argument, which is called on each element in the array. 

var myArray = [1, 2, 3, 4, 5];
myArray.forEach(function(element) {
    console.log(element);
});


for...of loop - This is a more recent addition to JavaScript, and it is the most concise way to iterate through an array. It allows you to iterate through the elements of an array without having to access the index, and it works with any iterable object, not just arrays.


//Map, Filter and Reduce


Map - The map method is used to create a new array with the result of a callback function called on each element in the original array. The callback function takes one argument, the current element, and returns the new value for that element. 

Filter - The filter method is used to filter an array based on a certain condition. The filter method takes a callback function as its argument, which is called on each element in the array. If the function returns true, the element is included in the new filtered array.

//Reduce - The reduce method is used to reduce an array to a single value. The reduce method takes a callback function as its argument, which is called on each element in the array. The callback function takes two arguments, the accumulator and the current element, and returns the new value for the accumulator.